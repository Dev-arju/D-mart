<%- include('../includes/head') %>
<style>
    section {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #4070f4;
    }

    :where(.container-otp, .otp-form, .input-field, .otp-header) {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .container-otp {
        background: #fff;
        padding: 30px 65px;
        border-radius: 12px;
        row-gap: 20px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    }

    .container-otp .otp-header {
        height: 65px;
        width: 65px;
        background: #4070f4;
        color: #fff;
        font-size: 2.5rem;
        border-radius: 50%;
    }

    .container-otp h4 {
        font-size: 1.25rem;
        color: #333;
        font-weight: 500;
    }

    .otp-form .input-field {
        flex-direction: row;
        column-gap: 10px;
    }

    .input-field input {
        height: 45px;
        width: 42px;
        border-radius: 6px;
        outline: none;
        font-size: 1.125rem;
        text-align: center;
        border: 1px solid #ddd;
    }

    .input-field input:focus {
        box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
    }

    .input-field input::-webkit-inner-spin-button,
    .input-field input::-webkit-outer-spin-button {
        display: none;
    }

    #otp-btn {
        margin-top: 25px;
        width: 100%;
        color: #fff;
        font-size: 1rem;
        border: none;
        padding: 9px 0;
        cursor: pointer;
        border-radius: 6px;
        pointer-events: none;
        background: #6e93f7;
        transition: all 0.2s ease;
    }
</style>
<link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />

<section>
    <div class="container-otp">
        <header class="otp-header" style="display: flex;">
            <i class="bx bxs-check-shield"></i>
        </header>
        <h4>Enter OTP Code</h4>
        <% if (locals.invalid) { %>
            <p style="margin: 0;color: orangered;"><%= invalid %></p>
        <% } %>
        
        <form action="/verify-otp" method="post" class="otp-form">
            <div class="input-field">
                <input  name="num1" />
                <input  disabled name="num2" />
                <input  disabled name="num3" />
                <input  disabled name="num4" />
                <input  disabled name="num5" />
                <input  disabled name="num6" />
            </div>
            <button type="submit" id="otp-btn">Verify OTP</button>
        </form>
        <span><a href="/resend-otp">resend otp</a></span>
    </div>
</section>

<script>
    const inputs = document.querySelectorAll("input"),
        btn = document.getElementById("otp-btn"),
        inputRegx = /[^0-9]/

    // iterate over all inputs
    inputs.forEach((input, index1) => {
        input.addEventListener("keyup", (e) => {
            // This code gets the current input element and stores it in the currentInput variable
            // This code gets the next sibling element of the current input element and stores it in the nextInput variable
            // This code gets the previous sibling element of the current input element and stores it in the prevInput variable
            const currentInput = input,
                nextInput = input.nextElementSibling,
                prevInput = input.previousElementSibling;

            // if the value has more than one character then clear it
            if (currentInput.value.length > 1 || currentInput.value.match(inputRegx)) {
                currentInput.value = "";
                return;
            }
            // if the next input is disabled and the current value is not empty
            //  enable the next input and focus on it
            if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
                nextInput.removeAttribute("disabled");
                nextInput.focus();
            }

            // if the backspace key is pressed
            if (e.key === "Backspace") {
                // iterate over all inputs again
                inputs.forEach((input, index2) => {
                    // if the index1 of the current input is less than or equal to the index2 of the input in the outer loop
                    // and the previous element exists, set the disabled attribute on the input and focus on the previous element
                    if (index1 <= index2 && prevInput) {
                        input.setAttribute("disabled", true);
                        input.value = "";
                        prevInput.focus();
                    }
                });
            }
            //if the fourth input( which index number is 3) is not empty and has not disable attribute then
            //add active class if not then remove the active class.
            if (inputs[5].value) {
                // btn.classList.add("btn-active");
                btn.style.pointerEvents = "auto";
                btn.style.background = "#0e4bf1"
                return;
            }
            btn.style.pointerEvents = "none";
            btn.style.background = "#6e93f7";
        });
    });

    //focus the first input which index is 0 on window load
    window.addEventListener("load", () => inputs[0].focus());

</script>

<%- include('../includes/foot') %>